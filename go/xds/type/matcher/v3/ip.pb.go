// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.30.0
// source: xds/type/matcher/v3/ip.proto

package v3

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/cncf/xds/go/xds/annotations/v3"
	v3 "github.com/cncf/xds/go/xds/core/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IPMatcher struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	RangeMatchers []*IPMatcher_IPRangeMatcher `protobuf:"bytes,1,rep,name=range_matchers,json=rangeMatchers,proto3" json:"range_matchers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPMatcher) Reset() {
	*x = IPMatcher{}
	mi := &file_xds_type_matcher_v3_ip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPMatcher) ProtoMessage() {}

func (x *IPMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_xds_type_matcher_v3_ip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPMatcher.ProtoReflect.Descriptor instead.
func (*IPMatcher) Descriptor() ([]byte, []int) {
	return file_xds_type_matcher_v3_ip_proto_rawDescGZIP(), []int{0}
}

func (x *IPMatcher) GetRangeMatchers() []*IPMatcher_IPRangeMatcher {
	if x != nil {
		return x.RangeMatchers
	}
	return nil
}

type IPMatcher_IPRangeMatcher struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ranges        []*v3.CidrRange        `protobuf:"bytes,1,rep,name=ranges,proto3" json:"ranges,omitempty"`
	OnMatch       *Matcher_OnMatch       `protobuf:"bytes,2,opt,name=on_match,json=onMatch,proto3" json:"on_match,omitempty"`
	Exclusive     bool                   `protobuf:"varint,3,opt,name=exclusive,proto3" json:"exclusive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPMatcher_IPRangeMatcher) Reset() {
	*x = IPMatcher_IPRangeMatcher{}
	mi := &file_xds_type_matcher_v3_ip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPMatcher_IPRangeMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPMatcher_IPRangeMatcher) ProtoMessage() {}

func (x *IPMatcher_IPRangeMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_xds_type_matcher_v3_ip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPMatcher_IPRangeMatcher.ProtoReflect.Descriptor instead.
func (*IPMatcher_IPRangeMatcher) Descriptor() ([]byte, []int) {
	return file_xds_type_matcher_v3_ip_proto_rawDescGZIP(), []int{0, 0}
}

func (x *IPMatcher_IPRangeMatcher) GetRanges() []*v3.CidrRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *IPMatcher_IPRangeMatcher) GetOnMatch() *Matcher_OnMatch {
	if x != nil {
		return x.OnMatch
	}
	return nil
}

func (x *IPMatcher_IPRangeMatcher) GetExclusive() bool {
	if x != nil {
		return x.Exclusive
	}
	return false
}

var File_xds_type_matcher_v3_ip_proto protoreflect.FileDescriptor

const file_xds_type_matcher_v3_ip_proto_rawDesc = "" +
	"\n" +
	"\x1cxds/type/matcher/v3/ip.proto\x12\x13xds.type.matcher.v3\x1a\x1fxds/annotations/v3/status.proto\x1a\x16xds/core/v3/cidr.proto\x1a!xds/type/matcher/v3/matcher.proto\x1a\x1bbuf/validate/validate.proto\"\x8d\x02\n" +
	"\tIPMatcher\x12T\n" +
	"\x0erange_matchers\x18\x01 \x03(\v2-.xds.type.matcher.v3.IPMatcher.IPRangeMatcherR\rrangeMatchers\x1a\xa9\x01\n" +
	"\x0eIPRangeMatcher\x128\n" +
	"\x06ranges\x18\x01 \x03(\v2\x16.xds.core.v3.CidrRangeB\b\xbaH\x05\x92\x01\x02\b\x01R\x06ranges\x12?\n" +
	"\bon_match\x18\x02 \x01(\v2$.xds.type.matcher.v3.Matcher.OnMatchR\aonMatch\x12\x1c\n" +
	"\texclusive\x18\x03 \x01(\bR\texclusiveBf\xd2Æ¤\xe1\x06\x02\b\x01\n" +
	"\x1ecom.github.xds.type.matcher.v3B\x0eIPMatcherProtoP\x01Z*github.com/cncf/xds/go/xds/type/matcher/v3b\x06proto3"

var (
	file_xds_type_matcher_v3_ip_proto_rawDescOnce sync.Once
	file_xds_type_matcher_v3_ip_proto_rawDescData []byte
)

func file_xds_type_matcher_v3_ip_proto_rawDescGZIP() []byte {
	file_xds_type_matcher_v3_ip_proto_rawDescOnce.Do(func() {
		file_xds_type_matcher_v3_ip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xds_type_matcher_v3_ip_proto_rawDesc), len(file_xds_type_matcher_v3_ip_proto_rawDesc)))
	})
	return file_xds_type_matcher_v3_ip_proto_rawDescData
}

var file_xds_type_matcher_v3_ip_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_xds_type_matcher_v3_ip_proto_goTypes = []any{
	(*IPMatcher)(nil),                // 0: xds.type.matcher.v3.IPMatcher
	(*IPMatcher_IPRangeMatcher)(nil), // 1: xds.type.matcher.v3.IPMatcher.IPRangeMatcher
	(*v3.CidrRange)(nil),             // 2: xds.core.v3.CidrRange
	(*Matcher_OnMatch)(nil),          // 3: xds.type.matcher.v3.Matcher.OnMatch
}
var file_xds_type_matcher_v3_ip_proto_depIdxs = []int32{
	1, // 0: xds.type.matcher.v3.IPMatcher.range_matchers:type_name -> xds.type.matcher.v3.IPMatcher.IPRangeMatcher
	2, // 1: xds.type.matcher.v3.IPMatcher.IPRangeMatcher.ranges:type_name -> xds.core.v3.CidrRange
	3, // 2: xds.type.matcher.v3.IPMatcher.IPRangeMatcher.on_match:type_name -> xds.type.matcher.v3.Matcher.OnMatch
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_xds_type_matcher_v3_ip_proto_init() }
func file_xds_type_matcher_v3_ip_proto_init() {
	if File_xds_type_matcher_v3_ip_proto != nil {
		return
	}
	file_xds_type_matcher_v3_matcher_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xds_type_matcher_v3_ip_proto_rawDesc), len(file_xds_type_matcher_v3_ip_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xds_type_matcher_v3_ip_proto_goTypes,
		DependencyIndexes: file_xds_type_matcher_v3_ip_proto_depIdxs,
		MessageInfos:      file_xds_type_matcher_v3_ip_proto_msgTypes,
	}.Build()
	File_xds_type_matcher_v3_ip_proto = out.File
	file_xds_type_matcher_v3_ip_proto_goTypes = nil
	file_xds_type_matcher_v3_ip_proto_depIdxs = nil
}
